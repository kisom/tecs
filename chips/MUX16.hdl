/**
  * multiplexor built from NAND-constructed primitives
  * inputs: x and y are the data pins, sel is the selector pin
  * output: if sel = 0 then x else y
 */

CHIP MUX16 {
    IN a[16], b[16], sel;
    OUT out[16];

    PARTS:
    NAND(a=sel,    b=sel,  out=sela);  /* selx is active if x is selected */

    NAND(a=a[0],   b=sela,  out=anda0);
    NAND(a=b[0],   b=sel,   out=orb0);
    NAND(a=anda0,  b=orb0,  out=out[0]);

    NAND(a=a[1],   b=sela,  out=anda1);
    NAND(a=b[1],   b=sel,   out=orb1);
    NAND(a=anda1,  b=orb1,  out=out[1]);

    NAND(a=a[2],   b=sela,  out=anda2);
    NAND(a=b[2],   b=sel,   out=orb2);
    NAND(a=anda2,  b=orb2,  out=out[2]);

    NAND(a=a[3],   b=sela,  out=anda3);
    NAND(a=b[3],   b=sel,   out=orb3);
    NAND(a=anda3,  b=orb3,  out=out[3]);

    NAND(a=a[4],   b=sela,  out=anda4);
    NAND(a=b[4],   b=sel,   out=orb4);
    NAND(a=anda4,  b=orb4,  out=out[4]);

    NAND(a=a[5],   b=sela,  out=anda5);
    NAND(a=b[5],   b=sel,   out=orb5);
    NAND(a=anda5,  b=orb5,  out=out[5]);

    NAND(a=a[6],   b=sela,  out=anda6);
    NAND(a=b[6],   b=sel,   out=orb6);
    NAND(a=anda6,  b=orb6,  out=out[6]);

    NAND(a=a[7],   b=sela,  out=anda7);
    NAND(a=b[7],   b=sel,   out=orb7);
    NAND(a=anda7,  b=orb7,  out=out[7]);

    NAND(a=a[8],   b=sela,  out=anda8);
    NAND(a=b[8],   b=sel,   out=orb8);
    NAND(a=anda8,  b=orb8,  out=out[8]);

    NAND(a=a[9],   b=sela,  out=anda9);
    NAND(a=b[9],   b=sel,   out=orb9);
    NAND(a=anda9,  b=orb9,  out=out[9]);

    NAND(a=a[10],  b=sela,  out=anda10);
    NAND(a=b[10],  b=sel,   out=orb10);
    NAND(a=anda10, b=orb10, out=out[10]);

    NAND(a=a[11],  b=sela,  out=anda11);
    NAND(a=b[11],  b=sel,   out=orb11);
    NAND(a=anda11, b=orb11, out=out[11]);

    NAND(a=a[12],  b=sela,  out=anda12);
    NAND(a=b[12],  b=sel,   out=orb12);
    NAND(a=anda12, b=orb12, out=out[12]);

    NAND(a=a[13],  b=sela,  out=anda13);
    NAND(a=b[13],  b=sel,   out=orb13);
    NAND(a=anda13, b=orb13, out=out[13]);

    NAND(a=a[14],  b=sela,  out=anda14);
    NAND(a=b[14],  b=sel,   out=orb14);
    NAND(a=anda14, b=orb14, out=out[14]);

    NAND(a=a[15],  b=sela,  out=anda15);
    NAND(a=b[15],  b=sel,   out=orb15);
    NAND(a=anda15, b=orb15, out=out[15]);

}
